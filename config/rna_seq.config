#!/bin/bash
# Author: Sung Gong <ssg29@cam.ac.uk>
# First created: 30/Apr/2014
# Last modified: 05/Mar/2018
# Environment variables to run tophat and cufflink 

#####################################################
# GLOBAL
# Variables remain same across multiple bash script
#####################################################
export TOP=$HOME/Pipelines
source $TOP/config/global.config

############
## SLRUM ###
############
export SL='SL3' # SL2 (paid ad-hoc), SL3 (free), SL3-SHORT, SL2-LONG
source $TOP/config/slurm.config # defines 'make_slurm_script'

##################
## WHICH COHORT ## 
##################
export COHORT='POPS' # SML1-PLS, CTLF, CTLM, POPS, CTL, SGA, PET
					# PLS: plasma samples
					# to be used by 'per.run.xx'
#####################
### WHICH SPECIES ###
#####################
export SPECIES='Homo_sapiens' # 'Homo_sapiens' or 'Mus_musculus' or 'PhiX'
#export VERSION=$SPECIES."SE125.v2"
export VERSION=$SPECIES."v1"

#############
## SAMPLES ##
#############
## FG-2014  ##
#export SLX='SLX-8546' # FG 1st mRNA
#export SLX='SLX-8547' # FG 2nd mRNA
#export SLX='SLX-8549' # FG 3rd mRNA
#export SLX='SLX-8546.SLX-8549' # 4 sample from SLX-8546 and SLX-8549
#export SLX='SLX-8551.SLX-8552'  # final top up
#export SLX='SLX-9170' # FG 1st total-RNA (including 3 mRNA top-ups)
#export SLX='SLX-9171' # FG 2nd total-RNA (including 1 mRNA top-ups)

## FG-2015 ##
#export SLX='SLX-9168' # FG 2015 1st total-RNA SE50 (56 samples, 4+2+1+2+3 lanes) v1,v2,v3,v4(GRCH37) v5(GRCh38)
#export SLX='SLX-9169' # FG 2015 2nd total-RNA SE50 (58 samples, 3+1+2+1+5 lanes) v1,v2,v3,v4(GRCH37) v5(GRCh38)

#export SLX='SLX-9168' # FG 2015 1st total-RNA SE125 (56 samples, 3 flowcell, 6 lanes per each) SE125.v1 (GRCh37) SE125.v2 (GRCh38)
#export SLX='SLX-9169' # FG 2015 2nd total-RNA SE125 (56 samples, 3 flowcell, 6 lanes per each) SE125.v1 (GRCh37) SE125.v2 (GRCh38)

#export SLX='SLX-9176'  # FG 2015 small-RNA 1st batch (36 samples, C7TWVANXX.s_6,C7VAJANXX.s_3) v2(GRCh37), v3(GRCh38)
#export SLX='SLX-9791'  # FG 2015 small-RNA 2nd batch (38 samples, C7TVEANXX.s_2,C7VAJANXX.s_4) v2(GRCh37), v3(GRCh38)
#export SLX='SLX-9794'  # FG 2015 small-RNA 3rd batch (40 samples, C7TVEANXX.s_3,C7VAJANXX.s_5) v2(GRCh37), v3(GRCh38)

## FG Plasma ##
#export SLX='SLX-7630' # FG plasma 2016 total-RNA SE50 (4 samples, 1 lane) GRCh38 (4 samples: D702_D502, D705_D502, D707_D502 and D709_D502)
#export SLX='SLX-9342' # FG plasma 2017 total-RNA SE50|PE150|PE75 (SE50: FAILED AND RE-RUN) PE75.v1: duplicated read, PE75.v2: cleaned
#export SLX='SLX-9345' # FG plasma 2017 total-RNA SE50|     |PE75 (SE50: fluidics issue) (GRCh38)
#export SLX='SLX-11368' # FG plasma 2017 PE150 (sample=420) Low PSG7
#export SLX='SLX-11369' # FG plasma 2017 PE150 (sample=710) High PSG7
#export SLX='SLX-11369-PE150-100K' # FG plasma 2017 PE150 (sample=710) High PSG7 #v1:A-trim & Q-trim(q<20) (legacy), v2: No-triming, v3: A-trim only, v4: A-trim & Q-trim(q<40) 
#export SLX='SLX-11369-PE150-10K-RQ' # FG plasma 2017 PE150 (sample=710) High PSG7, phiX removed  

## Susanne Maria Lager (SML) Plasma ##
#export SLX="SLX-SML1" # SLX-11370 SLX-11374 SLX-11759 SLX-11762 SLX-11763 SLX-11764 SLX-11765 SLX-11766 (flowcell: HMFW3BBXX)
                        # use v4
## Susanne Maria Larger Xten WGS dta ##
#export SLX="SLX-Xten2017" # 

## Illumina Plasma ##
#export SLX="SLX-ILM-Plasma2017"

## Claire ##
#export SLX='SLX-8082' # Claire Endometrial (Mus_musculus)
#export SLX='SLX-8769' # Claire Endometrial RNA-Seq Repeat (Mus_musculus): rerun all samples for tophat with mouse ref
#export SLX='SLX-8770' # Claire Endometrial RNA-Seq Repeat Tube 2 (Mus_musculus): D701_D501 and D701_D507 was OK, but re-run for remain samples with mouse ref
#export SLX='SLX-9608' # Endometrial RNA-Seq Repeat 3 (150211_D00491_0140_C6GVPANXX lanes 5, 6)
#export SLX='SLX-9609' # Endometrial RNA-Seq Repeat 3 (150211_D00491_0140_C6GVPANXX lane 7)
#export SLX='SLX-9614' # Endometriosis Lesions + PDN (5 mouse, 2 human)
#export SLX='SLX-9615' # Endometriosis Lesions + PDN (5 human - 2 mouse mis-assinged)

## PDN ##
#export SLX='SLX-8764' # PDN RNAseq B (140917_D00491_0099_C4EYHANXX lane 7): 24 human samples
#export SLX='SLX-8765' # PDN RNAseq B (140917_D00491_0099_C4EYHANXX lane 8): 
					   # 9 mouse(A002 A004 A005 A006 A007 A012 A013 A014 A015) + 15 human (24 in total)
#export SLX='SLX-8767' # PDN RNA-Seq Repeat (150105_D00408_0192_C5UP5ANXX lane 3): 23 human samples
#export SLX='SLX-8768' # PDN RNA-Seq Repeat (150105_D00408_0192_C5UP5ANXX lane 4): 
					   # 7 mouse(A002 A004 A005 A006 A007 A012 A013) + 14 human (21 in total)
#export SLX='SLX-9610' # PDN RNA-Seq Repeat 3 (3 mouse + 7 human samples)
#export SLX='SLX-9611' # PDN RNA-Seq Repeat 3 (10 human samples)
#export SLX='SLX-9612' # PDN RNA-Seq Repeat 3 (4 mouse + 6 human samples)
#export SLX='SLX-9613' # PDN RNA-Seq Repeat 3 (8 human samples)
#export SLX='SLX-9790' # PDN Tereza total RNA-Seq via Nugen's ovation ultra low input v2 (4 samples)

## Derina ##
#export SLX='SLX-9175' # DSweeney, PON3 project totRNA-libr (18 mouse samples of 1+1+2 lanes each)

## JD-SE50 ##
#export SLX='SLX-9796' # total-RNA SE50 1+1 lanes (May_2015, C6VNLANXX + C7N1EANXX)
#export SLX='SLX-9788' # total-RNA SE50 1+3 lanes (May_2015, C6VNLANXX + C7FTMANXX)
#export SLX='SLX-9792' # total-RNA SE50 1+3 lanes (May_2015, C6VNLANXX + C7N1EANXX)

## JD-SE125 ##
#export SLX='SLX-10281' # Pool1, 1 lane from SLX-10401 and 7 from SLX-10281 (v1: GRCh38, v2: hg19)
#export SLX='SLX-10402' # Pool2, 10 lanes from 4 flowcells (v1: GRCh38, v2: hg19)
#export SLX='SLX-9792' # Pool3, 9 lanes from 4 flowcells (v1: GRCh38, v2: hg19)
#export SLX='SLX-10284' # Pool4, 2 lanes from SLX-10405 and 5 from SLX-10284 (v1: GRCh38, v2: hg19)
#export SLX='SLX-10285' # Pool5, 2 lanes from SLX-10406 and 7 from SLX-10285 (v1: GRCh38, v2: hg19)
#export SLX='SLX-10283' # Pool6, 2 lanes from SLX-10407, 2 from SLX-10286 and 5 from SLX-10283 (v1: GRCh38, v2: hg19)
#export SLX='SLX-10287' # Pool7, 1 lane from SLX-10408, 10 from SLX-10287 (v1: GRCh38, v2: hg19)

# obsolete (these are merged with above)
#export SLX='SLX-10405' # total-RNA SE125 1 lane (set2_Sept_2015, C7YUKANXX)
#export SLX='SLX-10406' # total-RNA SE125 1 lane (set2_Sept_2015, C7YUKANXX)
#export SLX='SLX-10407' # total-RNA SE125 1 lane (set2_Sept_2015, C7YUKANXX)
#export SLX='SLX-10408' # total-RNA SE125 1 lane (set2_Sept_2015, C7YUKANXX)

## JD-small-RNA (SE50) ##
# HiSeq-2500
#export SLX='SLX-10291' # Pool1a, 1 lane (44 samples, Aug 2015, C80CEANXX) v1: GRCh38
#export SLX='SLX-10289' # Pool1b, 1 lane (42 samples, Jan 2016, C89ACANXX) v1: GRCh38 - repeat of SLX-10291
#export SLX='SLX-10293' # Pool2a, 1 lane (44 samples, Aug 2015, C80CEANXX) v1: GRch38
#export SLX='SLX-10290' # Pool2b, 1 lane (44 samples, Jan 2016, C89ACANXX) v1: GRch38 - repeat of SLX-10293
# top-up (HiSeq-4000)
#SLX-10288 # Pool1c, 2 lanes (H5CNCBBXX, H5H5LBBXX): 42 samples 
#SLX-10290 # Pool2c, 2 lanes (H5CNCBBXX, H5H5LBBXX): 44 samples
#SLX-11371 # Pool3a, 1 lane (H5CNCBBXX)
#SLX-11365 # Pool3b, 2 lanes (H7CLMBBXX, H5HH3BBXX)
#SLX-11372 # Pool4a, 1 lane (H5CNCBBXX)
#SLX-11366 # Pool4b, 2 lanes (H5FG7BBXX, H5HH3BBXX)
#SLX-11373 # Pool5a, 1 lane (H5CNCBBXX)
#SLX-11367 # Pool5b, 2 lanes (H5FG7BBXX, H5HH3BBXX)

# merger of HiSeq-2500 and HiSeq-4000
#export SLX='SLX-10288' # Pool1 (2 lanes from SLX-10288; 1 lane from SLX-10291; 1 lane from SLX-10289)
#export SLX='SLX-10290' # Pool2 (2 lanes from SLX-10290; 1 lane from SLX-10290; 1 lane from SLX-10293)
#export SLX='SLX-11365' # Pool3 (2 lanes from SLX-11365; 1 lane from SLX-11371)
#export SLX='SLX-11366' # Pool4 (2 lanes from SLX-11366; 1 lane from SLX-11372)
#export SLX='SLX-11367' # Pool5 (2 lanes from SLX-11367; 1 lane from SLX-11373)

## IA-SE50 Retosiban (total) ##
#export SLX='SLX-10297' # 1st batch of total-RNA SE50 48 samples (4 lanes from SLX-10297, 1 lane from SLX-10296) mapping to GRCh38
#export SLX='SLX-11761' # 2nd batch of total-RNA SE50 18 samples (1 lane from SLX-11761, 1 lane from SLX-11760) mapping to GRCh38
## IA-SE50 Retosiban (small) ##
#export SLX='SLX-11757' # SLX-10299 (H7M3NBBXX.s_3) and SLX-11757 (HCYV3BBXX.s_5)
#export SLX='SLX-11758' # SLX-10300 (H7M3NBBXX.s_4) and SLX-11758 (HCYV3BBXX.s_6)
## IA Trophoblast (SMS) SE-50
#export SLX='SLX-15301'
####################################################################################################################
#export SLX='Placentome'

#export ALL_BARCODES=($(for i in `ls $HOME/data/fastq/$SLX/$SLX.*.fq.gz | grep -v lost`; do echo $i | cut -d'/' -f7 | cut -d'.' -f2 ; done | uniq))
#export ALL_BARCODES=`cat $HOME/Pipelines/samtools.fastq.failed.from.cram.txt` # load samples (or barcode) manually (not from *fq.gz)
#export ALL_BARCODES=(D701_D502 D701_D508 D702_D505 D712_D505)

if [ $SLX == 'SLX-9614' ]; then
	if [ $SPECIES == 'Mus_musculus' ]; then
		export ALL_BARCODES=(A002 A004 A005 A006 A012)
	else
		export ALL_BARCODES=(A016 A019)
	fi
fi

###
### Samples & Pairs
#source $HOME/RNA-Seq/config/samples.config # export CASECTR_PAIRS

####################
### RUN-SPECIFIC ### 
####################
export IS_SE=1 # 1:single-end, 0:paired-end

####################
# CONTROL WORKFLOW #
####################
# Below called by bin/run_RNA_Seq.sh 
export RUN_TH_TRINDEX=0 # run tophat transcritome index (once and for all)
export RUN_STAR_INDEX=0 # run star index (once and for all)

########################
## Mapping & Counting ##
########################
export RUN_FASTQC=0 # run fastqc
# Below called by template/per.sample.tophat.sh
# Below called by template/per.sample.mirdeep2.sh

export RUN_TRIM=0 # run trim_galore (legacy)
export RUN_TRIM_SMARTER=1 # trim primer of SMARTer kit (plasma samples) 
export IS_SMARTER1=0 # 1 for SMART-Seq1; 0 for SMART-Seq2
export RUN_TRIM_NEB=0 # from template/per.sample.filter.human.sh
export RUN_TOPHAT=0 # run tophat
export RUN_BWA=0 # run bwa-mem 
export RUN_CIRI=1 # run CIRI2 (circRNA) 
export RUN_SALMON=0 # run salmon 
export RUN_STAR=0 # run star spliced aligner 
export RUN_GENOMECOV=0 # run bedtools genomecov
export RUN_UNMAP2FA=0
export RUN_FTCNT=0 	# run featureCounts 
export RUN_HTSEQ=0 # run htseq-count

# Below called by template/per.sample.tophat.unmapped.sh
export RUN_TOPHAT_UNMAPPED=0 	# run tophat (make sure to set RAW_JUNCS)
export RUN_FTCNT_UNMAPPED=0 	# run featureCounts 
export RUN_HTSEQ_UNMAPPED=0 	# run htseq-count
export RUN_DEXSEQ_CNT=0			# run dexseq_count.py

# Below called by template/per.sample.filter.human.sh
# final unmaped reads subject to pathogen detection
export RUN_PREPROCESS_UNMAPPED=0   # run cutadapt and preseq-lite for QC and LC-removal
export RUN_BOWTIE_UNMAPPED=0 	   # run bowtie for unmapped of unmapped against reference 
export RUN_BOWTIE_LOCAL_UNMAPPED=0 # run bowtie --local for unmapped of unmapped against reference 
export RUN_BBMAP_UNMAPPED=0 	   # run bbmap for unmapped of unmapped against reference 

# Below called by template/mirdeep2.persample.sh
export RUN_MIRDEEP_MAPPER=0
export RUN_MIRDEEP_CORE=0
export RUN_MIRDEEP_QUANTIFIER=0 # RUN_MIRDEEP_CORE=1 will do this
export RUN_MIRNA_CNT=0
export RUN_PIRNA_CNT=0

#########################
## Coverage & Assembly ##
#########################
export RUN_GENOMECOV_UNMAPPED=0 # run bedtools genomecov
export RUN_STRINGTIE_ASM=0 # 1st run for assembly
#export RUN_STRINGTIE_CNT=1 # 2nd run based on the inital assembly (merged transcripts)
						   # -B for Ballgown

##########
## GATK ##
##########
# Below called by template/gatk.rnaseq.persample.sh
export RUN_PICARD_RG=0  # AddOrReplaceReadGroups.jar (core=1)
export RUN_PICARD_MD=0  # MarkDuplicates.jar (core=1)
export RUN_GATK_SPLIT=0  # SplitNCigarReads (core=1)
export RUN_GATK_REALIGN=0 # Indel realignment (core=NT)
export RUN_GATK_BASE_RECAL=0 # base-quality recalibration (core=NT)
export RUN_GATK_HC=0 # Variant calling/filtering via Haplotype Caller (core=NT)
export RUN_GATK_ASE=0 # GATK ASEReadCounter (core=1)

#############
## BamUtil ##
#############
export RUN_BU_MD=0 # bam dedup

##############
## CuffLink ##
##############
export RUN_CUFFLINK=0 # run cufflink per sample

# Below per case-ctr pair
export RUN_CUFFMERGE=0 # run cuffmerge?
export RUN_CUFFQUANT=0 # run cuffquant?
export RUN_CUFFDIFF=0 # run cuffdiff?
export RUN_CUFFNORM=0 # run cuffnorm?
export RUN_CUMMERBUND=0 # run cummeRbund?

export MAPQ=1 # mapping quality to filter (via samtools view -q) or RUN_FLT_BY_MAPQ TRUE
######################
## TRIM & FILTERING ##
## via 'trim_galore'##
## legacy illumina TruSeq ##
######################
if [ $RUN_TRIM -eq 1 ];then
	# TruSeq HT Sample Kit D701–D712 adapters
	# http://supportres.illumina.com/documents/documentation/chemistry_documentation/experiment-design/illumina-customer-sequence-letter.pdf
	#export TR_ADAPTOR1=GATCGGAAGAGCACACGTCTGAACTCCAGTCAC # Truseq m|total RNA HT (33bp) 
	# http://cutadapt.readthedocs.io/en/latest/guide.html#illumina-truseq
	export TR_ADAPTOR1='AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC' # same as above but with a leading 'A' 
	#export TR_ADAPTOR1='AGATCGGAAGAGC'                     # default illumina 3' adapter (--illumina of trim_galore) 
	export TR_ADAPTOR2='AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT'
	export TR_QUAL=5 # --quality: Phred score (default: 20), justification http://journal.frontiersin.org/Journal/10.3389/fgene.2014.00013/full
	export TR_STRNCY=5 # --stringency (default: 1 for trim_galore)
fi

###################################
## Plasma samples                ##
## lib prep by                   ## 
## SMARTer-pico input (SLX-7630) ##
## trimmed by 'cutadapt'         ##
###################################
if [ $RUN_TRIM_SMARTER -eq 1 ];then
	if [ $IS_SMARTER1 -eq 1 ];then
		export TR_ADAPTOR1="SMARTer3p1=AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC" # default illumina 3' adapter
		export TR_ADAPTOR2="SMARTer3p2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT" # default illumina 3' adapter 2nd-read
    else # SMARTER pico V2 (adaptor switched)
		export TR_ADAPTOR2="SMARTer3p1=AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC" # default illumina 3' adapter
		export TR_ADAPTOR1="SMARTer3p2=AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT" # default illumina 3' adapter 2nd-read
	fi	
	export TR_QUAL=20				 # v1: 20, v2:NA(No trim), v3:NA, v4:40
	export TR_STRNCY=8               # -O (--overlap) #default: 3
	export TR_LEN=20                 # -m (--minimum-length)
	export TR_CUT_LEN=3              # -u (--cut) 
									 #    The -u/--cut option can be combined with the other options, 
									 #    but the desired bases are removed before any adapter trimming.
									 #    SMART-Seq pico input v1: The first three nucleotides of the first sequencing read (Read 1) 
									 #    SMART-Seq pico input v2: the first three nucleotides of the second sequencing read (Read 2) 
									 #    are derived from the templateswitching oligo. 
									 #    These three nucleotides must be trimmed prior to mapping.
fi

###################
## small-RNA Seq ##
## via 'cutadapt'##
###################
#cutadapt -q 20 -O 8 -a NEB3PrimeAdaptor=AGATCGGAAGAGCACACGTCT -g NEB5PrimeAdaptor=GTTCAGAGTTCTACAGTCCGACGATC -n 2 -m 20 -o
if [ $RUN_TRIM_NEB -eq 1 ];then
	export TR_ADAPTOR1="NEB3PrimeAdaptor=AGATCGGAAGAGCACACGTCT" 	  # 3' adaptor
	export TR_ADAPTOR2="NEB5PrimeAdaptor=GTTCAGAGTTCTACAGTCCGACGATC"  # 5' adaptor
	export TR_QUAL=20												  # default
	export TR_STRNCY=8                                                # -O (--overlap)
	export TR_LEN=15                                                  # -m (--minimum-length)
fi
####################
## Species Prefix ##
####################
if [ -n "$SPECIES" ]; then # if $SPECIES not null
	if [ $SPECIES = 'Homo_sapiens' ]; then
		export TR_PREFIX=GRCh38 # GRCh37|GRCh38
		export MIRBASE_SPECIES=hsa
		export MIRDEEP_SPECIES=Human
		export ENS_VER=90 # for Susanne's cholestasis plasma, IA-TB and CIRI2
		#export ENS_VER=82 # 82 (for manual downlaod)
		#export ENS_VER=75 # 75 (for igenome)
	elif [ $SPECIES = 'Mus_musculus' ]; then 
		export TR_PREFIX=GRCm38
		export MIRBASE_SPECIES=mmu
		export MIRDEEP_SPECIES=Mouse
	elif [ $SPECIES = 'PhiX' ]; then 
		export TR_PREFIX=RTA
		export MIRBASE_SPECIES=mmu
		export MIRDEEP_SPECIES=Mouse
		export ENS_VER=illumina
	else
		echo -e "$SPECIES not supported"
		exit
	fi
else
	echo -e "SPECIES not defined"
	exit
fi

## 20: hg19   #
#MIRBASE_VER=miRbase.20
# 21: GRCh38 #
MIRBASE_VER=miRbase.21

##########
# TOPHAT #
# Bowtie #
##########
export TR_INDEX_DIR=$HOME/data/tophat/transcriptome_index/$SPECIES/$TR_PREFIX
export BOWTIE2_INDEX_BASE=$HOME/data/genome/$SPECIES/Ensembl/$TR_PREFIX/Sequence/Bowtie2Index/genome # initial mapping
export BOWTIE2_INDEX_BASE2=$HOME/data/genome/$SPECIES/NCBI/$TR_PREFIX/Sequence/Bowtie2Index/genome # final filtering
export GENOME=$HOME/data/genome/$SPECIES/Ensembl/$TR_PREFIX/Sequence/WholeGenomeFasta/genome.fa
export GTF=$HOME/data/genome/$SPECIES/Ensembl/$TR_PREFIX/Annotation/Genes/$SPECIES.$TR_PREFIX.$ENS_VER.gtf
#export GTF=$HOME/results/RNA-Seq/Placentome/Cuffcompare/POPS/POPS.$TR_PREFIX.novel.10.tr.reconstruction.xloc.txt # Placentome (pseudo-count e.g. salmon)
export BWA_INDEX_BASE=$HOME/data/genome/$SPECIES/Ensembl/$TR_PREFIX/Sequence/BWAIndex/genome # for CIRI2 (circRNA)

export LIB_TYPE='fr-firststrand' # see http://cufflinks.cbcb.umd.edu/manual.html#library
								 # TruSeq Stranded mRNA
								 # For Illumina Truseq Stranded mRNA HT (our case)
								 # the library type should be specified as "fr-firststrand"
								 # http://www.illumina.com/documents/products/technotes/RNASeqAnalysisTopHat.pdf
								 # https://www.biostars.org/p/64250/
								 # https://github.com/genome/gms/wiki/RnaSeq
export TH_MH=10                  # --max-multihits (default 20), justification based on http://www.biomedcentral.com/1471-2164/12/516#sec2
export TH_PREFILTER='--prefilter-multihits'  # enable this

############
## SALMON ##
############
export SALMON_INDEX=$HOME/data/Salmon/transcriptome_index/$SPECIES/Ensembl/$TR_PREFIX/$SPECIES.$TR_PREFIX.$ENS_VER.cdna.ncrna.salmon.idx
#export SALMON_INDEX=$HOME/data/Salmon/transcriptome_index/$SPECIES/Ensembl/$TR_PREFIX/POPS.$TR_PREFIX.$ENS_VER.novel.10.tr.reconstruction.salmon.idx
export SALMON_LIBTYPE=A # automatically infer the library type

##############
## KALLISTO ##
##############
export KALLISTO_INDEX=''

###############
# bedToBigBed #
###############
export CHRINFO=$HOME/data/genome/$SPECIES.$TR_PREFIX.chromInfo

###############
## MIRDEEP2  ##
## small-RNA ##
###############
export BOWTIE_INDEX_BASE=$HOME/data/genome/$SPECIES/Ensembl/$TR_PREFIX/Sequence/BowtieIndex/genome

######################################
## Read README how to make this file #
######################################
#export RAW_JUNCS=$HOME/results/$SLX.$VERSION/$SLX.$VERSION.merged.junctions.junc # used by 'per.sample.tophat.unmapped.sh'
																				  # per-SLX only (junction merged per-SLX)
#export RAW_JUNCS=$HOME/results/RNA-Seq/SGA.AGA/Junctions/FG.SE125.SE50.AGA.GRCh38.merged.junctions.junc # FG per-project
#export RAW_JUNCS=$HOME/results/RNA-Seq/JD/Junctions/JD.SE125.ALL.$TR_PREFIX.merged.junctions.junc # JD per-project

############################################
##              STAR                      ##
## 1 10 11 .. 2 20 21 22 3 4 .. 9 MT X Y  ##
## the same order of BAM file from TopHat ##
## also used by 'per.sample.gatk.rnaseq'  ## 
############################################
export STAR_INDEX_DIR=$HOME/data/STAR_Index/$SPECIES/Ensembl/$TR_PREFIX #~/data/STAR_Index/Mus_musculus/Ensembl/GRCm38
export STAR_GENOME=$HOME/data/STAR_Index/$SPECIES/Ensembl/$TR_PREFIX/$SPECIES.$TR_PREFIX.dna.primary_assembly.fa
export STAR_GTF=$HOME/data/STAR_Index/$SPECIES/Ensembl/$TR_PREFIX/$SPECIES.$TR_PREFIX.$ENS_VER.gtf.gz
				# ~/data/STAR_Index/Mus_musculus/Ensembl/GRCm38/Mus_musculus.GRCm38.81.gtf.gz

###############
## CUFFLINKS ##
###############
export CUFF_FRAG_LEN_MEAN=350
export CUFF_FRAG_LEN_SD=12

#########
# HTSEQ #
#########
export HTSEQ_TYPE=exon # --type=exon <default>
export HTSEQ_IDATTR=gene_id # --idattr=gene_id <default>
export HTSEQ_STRAND=yes         # 'yes' for SMARTer-Seq and SMARTer-Seq2 (FG plasma)
#export HTSEQ_STRAND=reverse     # this is specific to our placenta tissue assay, TruSeq RNA HT (mRNA-stranded/totalRNA-stranded) 
							# justified from https://biowiki.atlassian.net/wiki/display/PS/2013/09/05/htseq+count+and+stranded+RNA 
							# also from http://seqanswers.com/forums/showthread.php?t=9303
###################
## featureCounts ##
###################
export FTCNT_MQ=10 # -Q: min MQ
export FTCNT_STRAND=1   # 0 (unstranded), 1 (stranded) and 2 (reversely stranded)
						# 1: for SMARTer pico-input v1 (clone-tech plasma) and SMARTer pico-input v2
						# 2: for placenta tissue assay (TrueSeq total RNA-Seq)

############
## DEXSeq ##
############
#python /home/ssg29/R/x86_64-unknown-linux-gnu-library/3.1/DEXSeq/python_scripts/dexseq_prepare_annotation.py $GTF $DEX_GFF
export DEX_GFF=$HOME/data/Annotation/DEXSeq/$TR_PREFIX.genes.dexseq.gff

############
## PICARD ##
############
# also in config/taget.seq.sbs.config
export PICARD=$HOME/Install/picard # to be used by bin/bissnp.sh
export RG_CN=CamObsGynae
export RG_ORDER=coordinate
export RG_STRINGENCY=SILENT
export RG_MEM=60g

##########
## GATK ##
## $HOME/Install/GATK 
##########
if [[ `hostname` =~ "butterfly" ]]; then
	export GATK_HOME=/whale-data/biosoft/src/GenomeAnalysisTK-3.2-2
fi

export GATK_MEM=60g
#/whale-data/Homo_sapiens/Ensembl/GRCh37/GATK.res.bundle.2.8/
#export GATK_BDL=$HOME/data/genome/$SPECIES/Ensembl/$TR_PREFIX/GRCh37/GATK.res.bundle.2.8
export GATK_BDL=$HOME/data/GATK/$SPECIES/Ensembl/$TR_PREFIX
export GATK_MILLS=$GATK_BDL/Mills_and_1000G_gold_standard.indels.vcf.gz
#export GATK_10KIndel=$GATK_BDL/1000G_phase1.indels.b37.vcf
#export GATK_MIN_INDEL_CNT=4 # -minIndelCnt
#export GATK_MIN_BASE_QUAL=20 # --min_base_quality_score
#export GATK_MIN_MAPPING_QUAL=10 # --minMappingQuality
#export GATK_DCOVG=1000 # --downsample_to_coverage (default: 1000)
export GATK_CALL_CONF=20.0 # -stand_call_conf (default: 30)
export GATK_EMIT_CONF=20.0 # -stand_emit_conf (default: 30)
export GATK_FS=30.0 # --  --filterExpression "FS > 30"
export GATK_QD=2.0 # --  --filterExpression "QD < 2.0"
#export GATK_MQ=10.0 # --  --filterExpression "MQ < 10.0"

########
#dbSNP #
########
export DBSNP=$HOME/data/dbSNP/$SPECIES/Ensembl/$TR_PREFIX/all.vcf.gz 

##############
## miRbase  ##
# 21: GRCh38 #
# 20: hg19   #
##############
export MIRBASE_PRECURSOR=$HOME/data/Annotation/$MIRBASE_VER/$MIRBASE_SPECIES.hairpin.fa
export MIRBASE_MATURE=$HOME/data/Annotation/$MIRBASE_VER/$MIRBASE_SPECIES.mature.fa

#############
## piRBase ##
#############
#/home/ssg29/data/Annotation/piRBase.10/piR_GRCh38_v1.0.bed.gz
export PIRBASE_BED=$HOME/data/Annotation/piRBase.10/piR_$TR_PREFIX"_v1.0.bed.gz"

###############
## StringTie ##
###############
export STR_MIN_READ=10    # -c: minimum reads per bp coverage to consider for transcript assembly (default: 2.5)
export STR_MIN_JNC_COV=5  # -j: minimum junction coverage (default: 1)
